# -*- coding: utf-8 -*-
"""Avocado Pandas and Numpy - Copy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mW5nn-d7IWYOBrDo279u4T__od0YEcBi

# Avocado

![image.png](attachment:image.png)
"""

import pandas as pd
import numpy as np
import datetime as dt

# Q1: Read your dataset, and using a dedicated pandas function view the first 5 rows
df = pd.read_csv('Avocado.csv', index_col = 'Unnamed: 0',parse_dates=[1], infer_datetime_format=True)
df.head()

# Q2: gain insights of your data set and see general information about each feature and the total number of non-null values in each variable
df.info()

# Q3: use a dedicated pandas function that gives summary statstics for only intersting numerical features in your data set.
df.describe()

# Q4: Can you dedect the missleading value from the above summary statstics?
# Answer: 4046,4225,4770,Total Bags, Small Bags, Large Bags and XLarge Bags a minimum of 0 which means
# either it is an error entered or the data entry deliberately entered 0 to complete a target number of sales.

# Q5: Let us now look at the datatypes of all these columns.
df.dtypes

# Q6: Sort your data set by Date column
df = df.sort_values(by = 'Date')

# Q7: Check for unique values of all columns.
df.nunique()

# Q8: what is the average price for each region for the year 2018?
df_2018 = df[df['year'] == 2018]
df_average = df_2018.groupby(['region']).mean()['AveragePrice']
df_average

# Q9 : How much was the total of average price for each year for the organic type?
df[df['type'] == 'organic'].groupby('year')['AveragePrice'].sum()

# Q10: How much was the Average price for each month of each region? To  do this you may want to create column feature, we created
      # a function for you just apply it, and in the next cell you will do the computation
def create_month(date):
    return date.month
df['Month'] = df['Date'].apply(create_month)

# Q11: now compute the total of Average price for each month of each region.
df.groupby(['Month']).sum()['AveragePrice']

# Q12: using .loc[], select the row with maximum Average Price
df.loc[df['AveragePrice'] == df['AveragePrice'].max()]

# Q13: Create a summary table description table reflecting each region and its total bags.
df.groupby(['region']).describe()['Total Bags'].transpose()

# Q14: which type crosponds for highest total Average Price?
df.groupby(['type'])['AveragePrice'].sum()

# Q14: what is the total of average price for each region for the organic type?
df[df['type'] == 'organic'].groupby('region')['AveragePrice'].sum()

# Q15: creat a pivot table showing total of Average price for each month indexed by year.
pd.pivot_table(df, values='AveragePrice', index=['year'], columns='Month', aggfunc='sum')

# Q16: creat a pivot table showing total of Average price for each month indexed by year and type.
pd.pivot_table(df, values='AveragePrice', index=['year','type'], columns='Month', aggfunc='sum')

# Q17: Correlation between 'Total Volume','Total Bags' and 'AveragePrice'.
features=['Total Volume','Total Bags', 'AveragePrice','4046','4225','4770']
df[features].corr()

# Q18: drop the 'Small Bags' feature.
df_dropped = df.drop('Small Bags', axis = 1)
df_dropped.head()